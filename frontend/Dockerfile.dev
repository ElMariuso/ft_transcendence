### Build phase ###
FROM node:18 AS build
WORKDIR /usr/src/app-build

# Copy the dependency files to leverage Docker caching.
COPY package*.json ./

# Install dependencies using npm ci for consistency.
RUN npm ci

# Copy the rest of the files
COPY . .

# Set MODE variable in the .env file
RUN echo "MODE=dev" > .env

### Execution phase ###
FROM node:18-slim

# Update and install necessary dependencies, then clean up to reduce image size
RUN apt update && apt install -y --no-install-recommends \
    libssl-dev dumb-init && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Create folders for logs and uploads
RUN mkdir -p logs uploads

# Copy necessary files from the build phase
COPY --from=build /usr/src/app-build/.env .env
COPY --from=build /usr/src/app-build/package*.json ./
COPY --from=build /usr/src/app-build/node_modules ./node_modules

# Define the user to run the application for added security
USER node

# Launching in development mode
ENV NODE_ENV development
EXPOSE 8080

CMD ["dumb-init", "npm", "run", "serve"]


